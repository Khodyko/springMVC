<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:batch="http://www.springframework.org/schema/batch"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">

    <context:component-scan
            base-package="org.example.spring"/>
    <mvc:annotation-driven/>
    <!--JSP-->
    <!--    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
    <!--        <property name="prefix" value="/WEB-INF/jsp/"/>-->
    <!--        <property name="suffix" value=".jsp"/>-->
    <!--        <property name="order" value="3"/>-->
    <!--    </bean>-->

    <!-- Thymeleaf-->
    <bean id="templateResolver"
          class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".html"/>
        <property name="templateMode" value="HTML5"/>
        <property name="cacheable" value="false"/>
        <property name="order" value="2"/>
    </bean>
    <bean id="templateEngine"
          class="org.thymeleaf.spring4.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver"/>
        <property name="enableSpringELCompiler" value="true"/>
    </bean>
    <bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine"/>
    </bean>
    <!--XML-->
    <bean id="ticketXmlConverter" class="org.example.spring.converter.TicketXmlConverter">
        <property name="marshaller" ref="jaxbMarshaller"/>
        <property name="unmarshaller" ref="jaxbMarshaller"/>
    </bean>

    <bean id="jaxbMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="packagesToScan" value="org.example.spring.model"/>
        <property name="marshallerProperties">
            <map>
                <entry key="jaxb.formatted.output">
                    <value type="boolean">true</value>
                </entry>
            </map>
        </property>
    </bean>
    <!--    properties-->
    <bean id="booking"
          class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="properties">
            <value>
                event.file.path=src/main/resources/event_data.json
                ticket.file.path=src/main/resources/ticket_data.json
                user.file.path=src/main/resources/user_data.json
                ticket.preload.xml.path=src/main/resources/ticket_preload.xml
            </value>
        </property>
    </bean>
    <!--transactions-->
    <bean id="transactionManager" class=
            "org.springframework.batch.support.transaction.ResourcelessTransactionManager"/>
    <bean id="jobLauncher"
          class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository"/>
    </bean>
    <bean id="jobRepository"
          class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

    <bean id="ticketBatchWriter" class="org.example.spring.converter.TicketBatchWriter"/>
    <batch:job id="firstBatchJob">
        <batch:step id="step1">
            <batch:tasklet start-limit="1">
                <batch:chunk reader="ticketXmlConverter" writer="ticketBatchWriter" commit-interval="2">
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
    </batch:job>


    <bean id="validatorDao" class="org.example.spring.dao.daoImpl.ValidatorDao"></bean>
    <bean id="storage" class="org.example.spring.Storage" init-method="initMethod">
        <property name="jsonReader" ref="jsonReader"/>
    </bean>
    <bean id="jsonReader" class="org.example.spring.converter.JsonReader"/>
    <bean id="eventServiceImpl" class="org.example.spring.service.serviceImpl.EventServiceImpl" autowire="byName"/>
    <bean id="userServiceImpl" class="org.example.spring.service.serviceImpl.UserServiceImpl" autowire="byName"/>
    <bean id="ticketServiceImpl" class="org.example.spring.service.serviceImpl.TicketServiceImpl" autowire="byName"/>
    <bean id="eventDaoImpl" class="org.example.spring.dao.daoImpl.EventDaoImpl">
        <property name="storage" ref="storage"/>
        <property name="validatorDao" ref="validatorDao"/>
    </bean>
    <bean id="userDaoImpl" class="org.example.spring.dao.daoImpl.UserDaoImpl">
        <property name="storage" ref="storage"/>
        <property name="validatorDao" ref="validatorDao"/>
    </bean>
    <bean id="ticketDaoImpl" class="org.example.spring.dao.daoImpl.TicketDaoImpl">
        <property name="storage" ref="storage"/>
        <property name="validatorDao" ref="validatorDao"/>
    </bean>

    <bean id="facadeImpl" class="org.example.spring.facade.FacadeImpl">
        <constructor-arg ref="eventServiceImpl"/>
        <constructor-arg ref="userServiceImpl"/>
        <constructor-arg ref="ticketServiceImpl"/>
    </bean>
    <bean id="eventController" class="org.example.spring.controller.EventController">
        <constructor-arg ref="facadeImpl"/>
    </bean>
    <bean id="baseController" class="org.example.spring.controller.BaseController"/>
    <bean id="ticketController" class="org.example.spring.controller.TicketController">
        <constructor-arg ref="facadeImpl"/>
    </bean>
    <bean id="ticketPDFController" class="org.example.spring.controller.TicketPDFController">
        <constructor-arg ref="facadeImpl"/>
        <constructor-arg ref="ticketPDFExporter"/>
    </bean>
    <bean id="userController" class="org.example.spring.controller.UserController">
        <constructor-arg ref="facadeImpl"/>
    </bean>
    <bean id="ticketPDFExporter" class="org.example.spring.converter.TicketPDFExporter"/>
    <bean id="ticketEntities" class="org.example.spring.model.Entity.TicketEntities"/>

</beans>